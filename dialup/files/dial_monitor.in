#! /bin/sh
#
# Copyright (c) 2023 Francesco Lattanzio
#
# Permission is hereby granted, free of charge, to any person obtaining
# a copy of this software and associated documentation files (the
# "Software"), to deal in the Software without restriction, including
# without limitation the rights to use, copy, modify, merge, publish,
# distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so, subject to
# the following conditions:
#
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
# IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
# CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
# TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
# SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

if test $# -lt 5; then
  /usr/bin/logger -p user.err -t %%PORTNAME%%/monitor "not enough arguments"
  exit 1
fi

iccid="$1"
sim_profile="$2"
start_day="$3"
interface="$4"
driver="$5"
shift 5

cd $(/usr/bin/dirname "$0")
cd ..

. ./config

iccid_pid_file=$(printf "$MONITOR_PID_FILE" "$iccid")

if ! test -f "$iccid_pid_file"; then
  /usr/bin/logger -p user.err -t %%PORTNAME%%/monitor "PID file \"$iccid_pid_file\" does not exist"
  exit 1
fi

while test -f "$iccid_pid_file"; do
  /bin/sleep 1
done

if test -x "$USER_LINKDOWN_COMMAND"; then
  /usr/bin/logger -p user.info -t %%PORTNAME%%/monitor "executing user linkdown command"
  "$USER_LINKDOWN_COMMAND" || /usr/bin/logger -p user.warning -t %%PORTNAME%%/monitor "user linkdown command \"$USER_LINKDOWN_COMMAND\" failed ($?)"
fi

if test -x "$SYSTEM_LINKDOWN_COMMAND"; then
  if test -x "$SUDO_COMMAND"; then
    /usr/bin/logger -p user.info -t %%PORTNAME%%/monitor "executing system linkdown command: \"$interface\""
    "$SUDO_COMMAND" "$SYSTEM_LINKDOWN_COMMAND" "$interface" || /usr/bin/logger -p user.warning -t %%PORTNAME%%/monitor "system linkdown command \"$SYSTEM_LINKDOWN_COMMAND\" failed ($?)"
  else
    /usr/bin/logger -p user.error -t %%PORTNAME%%/monitor "could not execute system linkdown command: sudo command \"$SUDO_COMMAND\" not found"
  fi
fi

iccid_traffic_file=$(printf "$TRAFFIC_FILE" "$iccid")
if ! test -r "$iccid_traffic_file"; then
  /usr/bin/logger -p user.notice -t %%PORTNAME%%/monitor "nothing to do: traffic file \"$iccid_traffic_file\" does not exist"
  exit 0
fi

read rx_bytes tx_bytes <"$iccid_traffic_file"

today=$(/bin/date +%d)
if test $today -lt $start_day; then
  period_new=$(/bin/date -v -1m +%Y%m)
else
  period_new=$(/bin/date +%Y%m)
fi

iccid_account_file=$(printf "$ACCOUNT_FILE" "$iccid")
if test -r "$iccid_account_file"; then
  read profile period_old total_rx_bytes total_tx_bytes <"$iccid_account_file"
  if test "$period_old" = "$period_new"; then
    rx_bytes=$((total_rx_bytes + rx_bytes))
    tx_bytes=$((total_tx_bytes + tx_bytes))
  fi
else
  if test -f "$iccid_account_file"; then
    /usr/bin/logger -p user.warning -t %%PORTNAME%%/monitor "could not read accounting file \"$iccid_account_file\""
    exit 1
  fi
fi

accounting_text="$sim_profile $period_new $rx_bytes $tx_bytes"
echo "$accounting_text" >"$iccid_account_file"
/bin/rm "$iccid_traffic_file"

/usr/bin/sed -i '' -e "/^$iccid /d" "$ACTIVE_SIM_FILE"
test -s "$ACTIVE_SIM_FILE" || /bin/rm "$ACTIVE_SIM_FILE"

if "./drivers/$driver/sm_write" "$SM_KEY" "$accounting_text" "$@"; then
  /usr/bin/logger -p user.info -t %%PORTNAME%%/monitor "accounting SM updated"
else
  /usr/bin/logger -p user.warning -t %%PORTNAME%%/monitor "could not update accounting SM"
  exit 1
fi
