#! /bin/sh
#
# Copyright (c) 2023 Francesco Lattanzio
#
# Permission is hereby granted, free of charge, to any person obtaining
# a copy of this software and associated documentation files (the
# "Software"), to deal in the Software without restriction, including
# without limitation the rights to use, copy, modify, merge, publish,
# distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so, subject to
# the following conditions:
#
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
# IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
# CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
# TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
# SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

if test $# -lt 8; then
  /usr/bin/logger -p daemon.err -t %%PORTNAME%%/ppp/connect "not enough arguments"
  exit 1
fi

pid_file="$1"
traffic_file="$2"
resolvconf_configuration_file="$3"
resolvconf_interface_file="$4"
sim_profile="$5"
remaining_traffic="$6"
autodisconnect="$7"
device_id="$8"

modem="/dev/modem$device_id"
if ! test -L "$modem"; then
  /usr/bin/logger -p daemon.err -t %%PORTNAME%%/ppp/connect "\"$modem\" does not exist"
  exit 1
fi

if test -n "$resolvconf_configuration_file" && test -n "$resolvconf_interface_file"; then
  dns_profile="enable-dns"
else
  dns_profile="disable-dns"
fi

unit=$(/bin/ls /dev/tun* 2>/dev/null | /usr/bin/sed 's,^/dev/tun,,' | /usr/bin/sort -k1n | /usr/bin/tail -1)
if test -z "$unit"; then
  unit=0
else
  unit=$((unit+1))
fi

/usr/bin/logger -p daemon.info -t %%PORTNAME%%/ppp/connect "starting PPP connection: -unit$unit set-modem-$device_id $sim_profile"
if ! /usr/sbin/ppp -background -unit$unit set-modem-$device_id $dns_profile $sim_profile >/dev/null; then
  /usr/bin/logger -p daemon.err -t %%PORTNAME%%/ppp/connect "PPP connection failed"
  exit 1
fi

cd $(/usr/bin/dirname "$0")

. ./config

echo "$device_id $unit" >>"$DEVICE_UNIT_FILE"

/usr/sbin/daemon -p "$pid_file" ./monitor "$traffic_file" "$remaining_traffic" "$autodisconnect" "$unit"

test "$dns_profile" = "enable-dns" || exit 0

pppctl_file=$(printf "$PPP_CONTROL_FILE" $unit)
if test -w "$pppctl_file"; then
  /usr/sbin/pppctl "$pppctl_file" show ipcp | /usr/bin/sed -nEe 's/^ *Resolver DNS: *([1-9].*)$/\1/p' | /usr/bin/sed -e 's/, */\
/g' | /usr/bin/sed -e '/^ *$/d;/^0\.0\.0\.0$/d;/^127\.0\.0\.1$/d;/^255\.255\.255\.255$/d;s/^\(.*\)$/nameserver \1/' >"$resolvconf_configuration_file"
  if test -s "$resolvconf_configuration_file"; then
    echo "tun$unit.ppp" >"$resolvconf_interface_file"
  else
    /usr/bin/logger -p daemon.notice -t %%PORTNAME%%/ppp/connect "no (valid) DNS servers provided"
  fi
else
  if test -e "$pppctl_file"; then
    /usr/bin/logger -p daemon.err -t %%PORTNAME%%/ppp/connect "cannot access PPP control file \"$pppctl_file\""
  else
    /usr/bin/logger -p daemon.err -t %%PORTNAME%%/ppp/connect "PPP control file \"$pppctl_file\" not found"
  fi
fi
